cmake_minimum_required(VERSION 3.19)

project(LDPC4QKDLibrary)


if (NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/autogen_ldpc_matrix_csc.hpp")
    message(WARNING "C++ code containing the LDPC matrix not found.
    Use the Julia scripts to automatically generate it form an .alist file! A minimal example will be generated automatically.")

    add_custom_command(
            OUTPUT autogen_ldpc_matrix_csc.hpp
            DEPENDS "${CMAKE_CURRENT_LIST_DIR}/autogen_ldpc_matrix_csc_example.hpp"
            COMMAND ${CMAKE_COMMAND} -E copy
            "${CMAKE_CURRENT_LIST_DIR}/autogen_ldpc_matrix_csc_example.hpp"
            "${CMAKE_CURRENT_LIST_DIR}/autogen_ldpc_matrix_csc.hpp"
            VERBATIM
    )
endif (NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/autogen_ldpc_matrix_csc.hpp")


if (NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/autogen_rate_adaption.hpp")
    message(WARNING "C++ code containing the rate adaption for the LDPC matrix not found.
    Use Julia to automatically generate it form an appropriate CSV file! A minimal example will be generated automatically.")

    add_custom_command(
            OUTPUT autogen_rate_adaption.hpp
            DEPENDS "${CMAKE_CURRENT_LIST_DIR}/autogen_rate_adaption_example.hpp"
            COMMAND ${CMAKE_COMMAND} -E copy
            "${CMAKE_CURRENT_LIST_DIR}/autogen_rate_adaption_example.hpp"
            "${CMAKE_CURRENT_LIST_DIR}/autogen_rate_adaption.hpp"
            VERBATIM
    )
endif (NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/autogen_rate_adaption.hpp")


add_library(LDPC4QKD INTERFACE
        rate_adaptive_code.hpp  # contains decoder and encoder. Does not need any other files to work.

        encoder.hpp # contains only minimal encoder that needs static storage of the LDPC matrix
        autogen_ldpc_matrix_csc.hpp # static storage of the LDPC matrix. Automatically generated by Julia script.
        autogen_rate_adaption.hpp # static storage of the rate adaption specification. Automatically generated by Julia script.
        )

target_compile_features(LDPC4QKD INTERFACE cxx_std_17)

target_include_directories(LDPC4QKD
        INTERFACE
        ${CMAKE_CURRENT_LIST_DIR}
        )

# Create alias with "namespace". This is the target to be used to link to the library in higher level projects.
add_library(LDPC4QKD::LDPC4QKD ALIAS LDPC4QKD)
